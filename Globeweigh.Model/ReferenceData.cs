//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Globeweigh.Model
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    
    public partial class ReferenceData : INotifyPropertyChanged
    {
        private int _id;
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private string _RefType;
        public string RefType
        {
            get { return _RefType; }
            set
            {
                if (_RefType != value)
                {
                    _RefType = value;
                    OnPropertyChanged("RefType");
                }
            }
        }
        private int _RefTypeId;
        public int RefTypeId
        {
            get { return _RefTypeId; }
            set
            {
                if (_RefTypeId != value)
                {
                    _RefTypeId = value;
                    OnPropertyChanged("RefTypeId");
                }
            }
        }
        private string _Code;
        public string Code
        {
            get { return _Code; }
            set
            {
                if (_Code != value)
                {
                    _Code = value;
                    OnPropertyChanged("Code");
                }
            }
        }
        private string _DisplayName;
        public string DisplayName
        {
            get { return _DisplayName; }
            set
            {
                if (_DisplayName != value)
                {
                    _DisplayName = value;
                    OnPropertyChanged("DisplayName");
                }
            }
        }
        private string _ExtraData;
        public string ExtraData
        {
            get { return _ExtraData; }
            set
            {
                if (_ExtraData != value)
                {
                    _ExtraData = value;
                    OnPropertyChanged("ExtraData");
                }
            }
        }
        private string _AlternativeDisplayName;
        public string AlternativeDisplayName
        {
            get { return _AlternativeDisplayName; }
            set
            {
                if (_AlternativeDisplayName != value)
                {
                    _AlternativeDisplayName = value;
                    OnPropertyChanged("AlternativeDisplayName");
                }
            }
        }
        private decimal _DecimalData;
        public decimal DecimalData
        {
            get { return _DecimalData; }
            set
            {
                if (_DecimalData != value)
                {
                    _DecimalData = value;
                    OnPropertyChanged("DecimalData");
                }
            }
        }
        private Nullable<int> _LowerLimit;
        public Nullable<int> LowerLimit
        {
            get { return _LowerLimit; }
            set
            {
                if (_LowerLimit != value)
                {
                    _LowerLimit = value;
                    OnPropertyChanged("LowerLimit");
                }
            }
        }
        private Nullable<int> _UpperLimit;
        public Nullable<int> UpperLimit
        {
            get { return _UpperLimit; }
            set
            {
                if (_UpperLimit != value)
                {
                    _UpperLimit = value;
                    OnPropertyChanged("UpperLimit");
                }
            }
        }
        private Nullable<int> _Tare;
        public Nullable<int> Tare
        {
            get { return _Tare; }
            set
            {
                if (_Tare != value)
                {
                    _Tare = value;
                    OnPropertyChanged("Tare");
                }
            }
        }
        private Nullable<int> _NominalWeight;
        public Nullable<int> NominalWeight
        {
            get { return _NominalWeight; }
            set
            {
                if (_NominalWeight != value)
                {
                    _NominalWeight = value;
                    OnPropertyChanged("NominalWeight");
                }
            }
        }
        private Nullable<int> _AveragePacksPerminute;
        public Nullable<int> AveragePacksPerminute
        {
            get { return _AveragePacksPerminute; }
            set
            {
                if (_AveragePacksPerminute != value)
                {
                    _AveragePacksPerminute = value;
                    OnPropertyChanged("AveragePacksPerminute");
                }
            }
        }
        private bool _Deleted;
        public bool Deleted
        {
            get { return _Deleted; }
            set
            {
                if (_Deleted != value)
                {
                    _Deleted = value;
                    OnPropertyChanged("Deleted");
                }
            }
        }
        private System.DateTime _DateCreated;
        public System.DateTime DateCreated
        {
            get { return _DateCreated; }
            set
            {
                if (_DateCreated != value)
                {
                    _DateCreated = value;
                    OnPropertyChanged("DateCreated");
                }
            }
        }
        private Nullable<System.DateTime> _DateDeleted;
        public Nullable<System.DateTime> DateDeleted
        {
            get { return _DateDeleted; }
            set
            {
                if (_DateDeleted != value)
                {
                    _DateDeleted = value;
                    OnPropertyChanged("DateDeleted");
                }
            }
        }
        private Nullable<System.DateTime> _DateLastModified;
        public Nullable<System.DateTime> DateLastModified
        {
            get { return _DateLastModified; }
            set
            {
                if (_DateLastModified != value)
                {
                    _DateLastModified = value;
                    OnPropertyChanged("DateLastModified");
                }
            }
        }
        private string _Customer;
        public string Customer
        {
            get { return _Customer; }
            set
            {
                if (_Customer != value)
                {
                    _Customer = value;
                    OnPropertyChanged("Customer");
                }
            }
        }
    
        #region INotifyPropertyChanged Members
        public event PropertyChangedEventHandler PropertyChanged;
    
        protected void OnPropertyChanged(string propertyName)
        {
            OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
        }
    
        protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
        {
            if (PropertyChanged != null)
                PropertyChanged(this, e);
        }
        #endregion
    }
}
