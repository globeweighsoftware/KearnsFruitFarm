//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Globeweigh.Model
{
    using System;
    using System.ComponentModel;
    
    public partial class spGetDispatchPalletProductsGrouped_Result : INotifyPropertyChanged
    {
        private Nullable<int> _BoxCount;
        public Nullable<int> BoxCount
        {
            get { return _BoxCount; }
            set
            {
                if (_BoxCount != value)
                {
                    _BoxCount = value;
                    OnPropertyChanged("BoxCount");
                }
            }
        }
        private string _BatchNo;
        public string BatchNo
        {
            get { return _BatchNo; }
            set
            {
                if (_BatchNo != value)
                {
                    _BatchNo = value;
                    OnPropertyChanged("BatchNo");
                }
            }
        }
        private Nullable<System.DateTime> _BestBeforeDate;
        public Nullable<System.DateTime> BestBeforeDate
        {
            get { return _BestBeforeDate; }
            set
            {
                if (_BestBeforeDate != value)
                {
                    _BestBeforeDate = value;
                    OnPropertyChanged("BestBeforeDate");
                }
            }
        }
        private int _ProductId;
        public int ProductId
        {
            get { return _ProductId; }
            set
            {
                if (_ProductId != value)
                {
                    _ProductId = value;
                    OnPropertyChanged("ProductId");
                }
            }
        }
        private string _Description;
        public string Description
        {
            get { return _Description; }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                    OnPropertyChanged("Description");
                }
            }
        }
        private Nullable<int> _QuantityPerBox;
        public Nullable<int> QuantityPerBox
        {
            get { return _QuantityPerBox; }
            set
            {
                if (_QuantityPerBox != value)
                {
                    _QuantityPerBox = value;
                    OnPropertyChanged("QuantityPerBox");
                }
            }
        }
        private Nullable<int> _ItemWeight;
        public Nullable<int> ItemWeight
        {
            get { return _ItemWeight; }
            set
            {
                if (_ItemWeight != value)
                {
                    _ItemWeight = value;
                    OnPropertyChanged("ItemWeight");
                }
            }
        }
        private Nullable<bool> _DisplayUnitKilos;
        public Nullable<bool> DisplayUnitKilos
        {
            get { return _DisplayUnitKilos; }
            set
            {
                if (_DisplayUnitKilos != value)
                {
                    _DisplayUnitKilos = value;
                    OnPropertyChanged("DisplayUnitKilos");
                }
            }
        }
        private int _BatchId;
        public int BatchId
        {
            get { return _BatchId; }
            set
            {
                if (_BatchId != value)
                {
                    _BatchId = value;
                    OnPropertyChanged("BatchId");
                }
            }
        }
        private Nullable<bool> _IsManual;
        public Nullable<bool> IsManual
        {
            get { return _IsManual; }
            set
            {
                if (_IsManual != value)
                {
                    _IsManual = value;
                    OnPropertyChanged("IsManual");
                }
            }
        }
        private int _EntityId;
        public int EntityId
        {
            get { return _EntityId; }
            set
            {
                if (_EntityId != value)
                {
                    _EntityId = value;
                    OnPropertyChanged("EntityId");
                }
            }
        }
    
        #region INotifyPropertyChanged Members
        public event PropertyChangedEventHandler PropertyChanged;
    
        protected void OnPropertyChanged(string propertyName)
        {
            OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
        }
    
        protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
        {
            if (PropertyChanged != null)
                PropertyChanged(this, e);
        }
        #endregion
    }
}
